//
//  ISMSGenre.m
//  libSub
//
//  Created by Benjamin Baron on 2/2/16.
//  Copyright Â© 2016 Einstein Times Two Software. All rights reserved.
//

#import "ISMSGenre.h"
#import "LibSub.h"

@implementation ISMSGenre

- (instancetype)initWithItemId:(NSInteger)itemId
{
    return [self initWithGenreId:itemId];
}

- (instancetype)initWithGenreId:(NSInteger)genreId
{
    if (self = [super init])
    {
        __block BOOL foundRecord = NO;
        
        [databaseS.songModelReadDbPool inDatabase:^(FMDatabase *db) {
            NSString *query = @"SELECT * FROM genres WHERE genreId = ?";
            FMResultSet *r = [db executeQuery:query, @(genreId)];
            if ([r next])
            {
                foundRecord = YES;
                [self _assignPropertiesFromResultSet:r];
            }
            [r close];
        }];
        
        return foundRecord ? self : nil;
    }
    
    return nil;
}

- (instancetype)initWithName:(NSString *)name
{
    if (self = [super init])
    {
        __block BOOL foundRecord = NO;
        
        [databaseS.songModelReadDbPool inDatabase:^(FMDatabase *db) {
            NSString *query = @"SELECT * FROM genres WHERE name = ?";
            FMResultSet *r = [db executeQuery:query, name];
            if ([r next])
            {
                foundRecord = YES;
                [self _assignPropertiesFromResultSet:r];
            }
            [r close];
        }];
        
        if (!foundRecord)
        {
            _name = name;
            [self insertModel];
        }
    }
    
    return self;
}

- (void)_assignPropertiesFromResultSet:(FMResultSet *)resultSet
{
    _genreId = [resultSet objectForColumnIndex:0];
    _name = N2n([resultSet objectForColumnIndex:2]);
}

- (BOOL)insertModel
{
    NSAssert(self.genreId == nil, @"ISMSGenre insert model only supported for new genres (i.e. no genre id, as it's autogenerated by the db)");
    
    __block BOOL success = NO;
    [databaseS.songModelWritesDbQueue inDatabase:^(FMDatabase *db)
     {
         NSString *query = @"INSERT INTO genres VALUES (?, ?)";
         success = [db executeUpdate:query, [NSNull null], self.name];
         
         if (success)
         {
             self.genreId = @([db longForQuery:@"SELECT last_insert_rowid()"]);
         }
     }];
    
    return success;
}

- (BOOL)replaceModel
{
    if (!self.genreId)
        return NO;
    
    __block BOOL success = NO;
    [databaseS.songModelWritesDbQueue inDatabase:^(FMDatabase *db)
     {
         NSString *query = @"REPLACE INTO genres VALUES (?, ?)";
         success = [db executeUpdate:query, self.genreId, self.name];
     }];
    
    return success;
}

- (BOOL)deleteModel
{
    __block BOOL success = NO;
    [databaseS.songModelWritesDbQueue inDatabase:^(FMDatabase *db)
     {
         NSString *query = @"DELETE FROM genres WHERE genreId = ?";
         success = [db executeUpdate:query, self.genreId];
     }];
    return success;
}

#pragma mark - ISMSItem -

- (NSNumber *)itemId
{
    return self.genreId;
}

- (NSString *)itemName
{
    return self.name;
}

#pragma mark - NSCoding -

- (void)encodeWithCoder:(NSCoder *)encoder
{
    [encoder encodeObject:self.genreId forKey:@"genreId"];
    [encoder encodeObject:self.name    forKey:@"name"];
}

- (id)initWithCoder:(NSCoder *)decoder
{
    if ((self = [super init]))
    {
        _genreId = [decoder decodeObjectForKey:@"genreId"];
        _name    = [decoder decodeObjectForKey:@"name"];
    }
    return self;
}

#pragma mark - NSCopying -

- (id)copyWithZone:(NSZone *)zone
{
    ISMSGenre *genre = [[ISMSGenre alloc] init];
    genre.genreId    = [self.genreId copy];
    genre.name       = [self.name copy];
    return genre;
}

@end
